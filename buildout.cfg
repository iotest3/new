[buildout]
extensions = mr.developer
develop = .
unzip = true
parts =
    var
    karl
    postoffice.ini

find-links = http://karlhosting.github.io/karl4

# override any eggs-directory or download-cache settings
# that might be in ~/.buildout/default.cfg. We have to do this because
# we're pinning versions using a custom package index instead of
# using versions.cfg.

customization-packages =
    osi

# version pinning:
show-picked-versions = true
update-versions-file = versions.cfg
extends = versions.cfg

[var]
recipe = z3c.recipe.mkdir
paths =
    var/chameleon_cache
    var/log

[sources]
karl = git git@github.com:karlproject/karl.git
osi = git git@github.com:karlhosting/osi.git
relstorage = git git@github.com:zodb/relstorage.git
repoze.catalog = git git@github.com:repoze/repoze.catalog.git
repoze.pgtextindex = git git@github.com:repoze/repoze.pgtextindex.git
repoze.profile = git git@github.com:cguardia/repoze.profile.git
repoze.postoffice = git git@github.com:repoze/repoze.postoffice.git
repoze.sendmail = git git@github.com:karlproject/repoze.sendmail.git
repoze.urchin = svn svn+ssh://repoze@svn.repoze.org/svn/repoze.urchin/trunk
repozitory = git git@github.com:Pylons/repozitory.git
pyramid_formish = git git@github.com:Pylons/pyramid_formish.git
chameleon = git git@github.com:chrisrossi/chameleon.git
appendonly = svn svn+ssh://svn.zope.org/repos/main/appendonly/trunk
external_link_ticket = git git@github.com:karlproject/karl.external_link_ticket.git
pyramid_jwtauth = git git@github.com:karlproject/pyramid_jwtauth.git

[karl]
recipe = zc.recipe.egg
unzip = true
dependent-scripts = true
eggs =
    karl [tests]
    persistent
    ${buildout:customization-packages}
    repoze.debug
    repoze.profile
    supervisor
    superlance
    guillotine
    RelStorage [postgresql]
    repoze.pgtextindex
    repoze.postoffice
    repozitory
    pyramid_debugtoolbar
    slowlog
    waitress
    repoze.profile
    j1m.relstoragejsonsearch
    repoze.vhm
    repoze.urchin
dependent-scripts = true
interpreter = py
initialization =
  import relstorage.storage
  relstorage.storage.RelStorage.afterCompletion = (
    relstorage.storage.RelStorage._rollback_load_connection)

[postoffice.ini]
recipe = zc.recipe.deployment:configuration
directory = ${buildout:directory}/etc
maildir = ${buildout:directory}/var/po_mail
mail_filters = to_hostname:pg.example.com
text =
  [post office]
  zodb_uri = zconfig://${postoffice_zodb.conf:location}
  maildir = ${:maildir}
  max_message_size = 100m

  # 1 message every 4 minutes, using the To header field as a discriminator
  ooo_loop_frequency = 0.25
  ooo_loop_headers = To

  # Five minutes
  ooo_throttle_period = 300

  reject_filters =
      header_regexp_file: ${:directory}/header_checks.txt
      body_regexp_file: ${:directory}/body_checks.txt

  [queue:osi]
  filters = ${:mail_filters}

[postoffice_zodb.conf]
recipe = zc.recipe.deployment:configuration
directory = ${buildout:directory}/etc
dsn = postgresql://localhost/karltestpo
text =
  %import relstorage
  %define INSTANCE ${buildout:directory}
  <zodb main>
    cache-size 100000
    pool-size 1
    <relstorage>
      <postgresql>
        dsn ${:dsn}
      </postgresql>
      shared-blob-dir False
      blob-dir $INSTANCE/var/postoffice_blob_cache
      keep-history false
      cache-local-mb 500
      cache-local-object-max 20000
    </relstorage>
  </zodb>
